[package]
  authors       = ["Eric Evans <ciresnave@gmail.com>"]
  categories    = ["authentication", "web-programming"]
  description   = "A comprehensive, production-ready authentication and authorization framework for Rust applications"
  documentation = "https://docs.rs/auth-framework"
  edition       = "2024"
  keywords      = ["auth", "authentication", "authorization", "jwt", "oauth"]
  license       = "MIT OR Apache-2.0"
  name          = "auth-framework"
  readme        = "README.md"
  repository    = "https://github.com/ciresnave/auth-framework"
  rust-version  = "1.88"
  version       = "0.4.2"

[[bin]]
  name              = "auth-framework"
  path              = "src/bin/admin.rs"
  required-features = ["admin-binary"]

[dependencies]
  # Async runtime
  tokio = { version = "1.0", features = ["full"] }

  # JWT handling
  jsonwebtoken = "9.2"

  # HTTP client for OAuth flows
  reqwest = { version = "0.12", features = ["json"], optional = true }

  # Serialization
  serde      = { version = "1.0", features = ["derive"] }
  serde_json = "1.0"

  # Time handling
  chrono = { version = "0.4", features = ["serde"] }

  # UUID generation
  uuid = { version = "1.0", features = ["serde", "v4"] }

  # Additional format support for migration
  serde_yaml = "0.9"
  toml       = "0.9"

  # Configuration management
  config = { version = "0.15", default-features = false, features = [
    "ini",
    "json",
    "ron",
    "toml",
    "yaml",
  ] }

  # Error handling
  anyhow    = "1.0"
  thiserror = "2.0"

  # Async trait support
  async-trait = "0.1"

  # Cryptography
  rand = "0.9"
  ring = "0.17"

  # Time handling
  time = { version = "0.3", features = ["formatting", "parsing", "serde"] }

  # Logging and tracing
  log                = "0.4"
  tracing            = "0.1"
  tracing-subscriber = { version = "0.3", features = ["env-filter"] }

  # URL handling
  url = "2.4"

  # Base64 encoding
  base64 = "0.22"

  # Bytes utilities
  bytes = "1.5"

  # MaxMind GeoIP2 for IP geolocation
  maxminddb = "0.26"

  # Threat intelligence integration
  csv                  = "1.3"  # For parsing threat feeds
  dirs                 = "6.0"  # For finding config directories
  ipnetwork            = "0.21" # For CIDR network parsing
  tokio-cron-scheduler = "0.14" # For automated feed updates

  # Hex encoding
  hex = "0.4"

  # SHA-2 hashing (for OAuth 2.0 PKCE and other server features)
  sha2 = "0.10"

  # SHA-1 hashing (for WS-Security password digest)
  sha1 = "0.10"

  # HMAC for TOTP and other authentication schemes
  hmac = "0.12"

  # Password hashing
  argon2 = "0.5"
  bcrypt = "0.17"

  # Enterprise RBAC system
  role-system = { version = "1.1.1", optional = true, features = [
    "async",
    "audit",
    "persistence",
  ] }

  # Optional Redis support
  redis = { version = "0.32", optional = true, features = [
    "aio",
    "tokio-comp",
  ] }

  # Rate limiting
  governor    = "0.10"
  nonzero_ext = "0.3"

  # TOTP authentication
  totp-lite = "2.0"

  # Base32 encoding for TOTP
  base32 = "0.5"

  # URL encoding utilities
  urlencoding = "2.1"

  # X.509 certificate parsing for OAuth 2.0 Mutual TLS (RFC 8705)
  x509-parser = "0.17"

  # X.509 certificate chain validation (production-grade)
  rustls-webpki = "0.103"

  # Fast CRC32 calculation
  crc32fast = "1.3"

  # Memory protection and zeroization
  zeroize = { version = "1.8", features = ["zeroize_derive"] }

  # Constant-time comparisons
  subtle = "2.5"

  # High-performance concurrent data structures
  dashmap = "6.1"

  # Secret management
  secrecy = { version = "0.10", features = ["serde"] }

  # Performance and Observability enhancements
  metrics = { version = "0.24", optional = true }
  metrics-prometheus = { version = "0.11", optional = true }
  opentelemetry = { version = "0.30", features = ["trace"], optional = true }
  opentelemetry-jaeger = { version = "0.22", optional = true }
  opentelemetry-otlp = { version = "0.30", optional = true }
  opentelemetry-prometheus = { version = "0.29", optional = true }
  opentelemetry_sdk = { version = "0.30", features = [
    "trace",
  ], optional = true }
  prometheus = { version = "0.14", optional = true }
  tracing-opentelemetry = { version = "0.31", optional = true }

  # Event sourcing and streaming
  futures      = { version = "0.3", optional = true }
  serde_derive = "1.0"
  tokio-stream = { version = "0.1", optional = true }

  # Configuration hot-reload
  notify = { version = "8.2", optional = true }

  # Memory pool optimization
  bumpalo     = { version = "3.14", optional = true }
  object-pool = { version = "0.6", optional = true }

  # OAuth device flows (optional enhanced device flow support)
  oauth-device-flows = { version = "0.1", optional = true }

  # OpenID Connect support (optional) - Updated to fix RSA dependency
  openidconnect = { version = "4.0", optional = true }

  # Missing dependencies for 100% completion
  ldap3                 = { version = "0.11", optional = true }
  otpauth               = { version = "0.5", optional = true }  # Updated to latest available
  unicode-normalization = { version = "0.1", optional = true }

  # CLI dependencies
  clap      = { version = "4.0", features = ["derive"], optional = true }
  rpassword = { version = "7.0", optional = true }

  # TUI dependencies
  crossterm = { version = "0.29", optional = true } # Updated to maintain compatibility
  ratatui   = { version = "0.29", optional = true } # Updated to latest version
  tui-input = { version = "0.14", optional = true }

  # Additional utility dependencies
  colored   = { version = "3.0", optional = true }
  console   = { version = "0.16", optional = true }
  dialoguer = { version = "0.12", optional = true }
  indicatif = { version = "0.18", optional = true }

  # Web framework dependencies
  futures-util = { version = "0.3", optional = true }

  # Template engine for web GUI
  askama = { version = "0.14", optional = true }
  # Note: askama_axum was removed in askama 0.13+ - axum integration is now built into askama

  # XML processing for SAML
  quick-xml = { version = "0.38", features = ["serialize"], optional = true }

  # Passkey/WebAuthn dependencies
  coset          = { version = "0.3", optional = true }
  passkey        = { version = "0.4", optional = true } # Updated to fix idna dependency
  passkey-client = { version = "0.4", optional = true } # Updated to fix idna dependency

  # Web framework integrations (optional)
  actix-web = { version = "4.0", optional = true }
  axum = { version = "0.8", features = ["macros"], optional = true }
  serde_urlencoded = { version = "0.7", optional = true }
  tower = { version = "0.5", features = ["util"], optional = true }
  tower-http = { version = "0.6", features = [
    "cors",
    "fs",
    "trace",
  ], optional = true }
  warp = { version = "0.4", features = ["server", "test"], optional = true }

  # Database integrations (optional) - Updated sqlx to fix RSA vulnerability
  sqlx = { version = "0.8", features = [
    "chrono",
    "mysql",
    "postgres",
    "runtime-tokio-rustls",
    "uuid",
  ], optional = true }
  tokio-postgres = { version = "0.7", optional = true }

  # Testing infrastructure (optional)
  html-escape    = "0.2.13"
  testcontainers = { version = "0.25", optional = true }

  # SMSKit dependencies for next-gen SMS support
  sms-aws-sns     = { version = "0.2", optional = true }
  sms-core        = { version = "0.2", optional = true }
  sms-plivo       = { version = "0.2", optional = true }
  sms-twilio      = { version = "0.2", optional = true }
  sms-web-axum    = { version = "0.2", optional = true }
  sms-web-generic = { version = "0.2", optional = true }

  # Additional optional dependencies that are referenced by features but not declared
  encoding_rs      = { version = "0.8", optional = true }
  rustls           = { version = "0.23", optional = true }
  rustls-pki-types = { version = "1.0", optional = true }
  schannel         = { version = "0.1", optional = true }
  webpki           = { version = "0.22", optional = true }

[dev-dependencies]
  axum-test  = "18.0"
  criterion  = { version = "0.7", features = ["async_tokio", "html_reports"] }
  fastrand   = "2.0"
  mockito    = "1.2"
  tempfile   = "3.21"
  test-log   = "0.2"
  tokio-test = "0.4"

[features]
  default = [
    "enhanced-rbac",    # Re-enabled for comprehensive authorization testing
    "postgres-storage",
    "reqwest",          # HTTP client needed for OAuth flows
  ] # PostgreSQL recommended
  enhanced-device-flow = ["oauth-device-flows"]
  mysql-storage = ["sqlx"]
  openid-connect = ["openidconnect"]
  postgres-storage = ["sqlx", "tokio-postgres"]
  redis-storage = ["redis"]
  testing = []
  # Enhanced cryptography features
  distributed-rate-limiting = ["redis"]
  enhanced-crypto           = ["chacha20poly1305", "ed25519-dalek", "x25519-dalek"]
  fips-compliance           = ["aws-lc-rs"]
  reqwest                   = ["dep:reqwest"]

  # Enterprise RBAC with role-system v1.0
  enhanced-rbac = ["api-server", "role-system"]

  # Additional features referenced in code
  actix-integration = ["actix-web", "futures-util"]
  admin-binary = ["cli", "tui", "web-gui"]
  api-server = ["axum", "tower", "tower-http"]
  axum-integration = ["axum", "serde_urlencoded", "tower", "tower-http"]
  cli = [
    "clap",
    "colored",
    "console",
    "dialoguer",
    "indicatif",
    "rpassword",
    "tokio-postgres",
  ]
  docker-tests = ["testcontainers"]
  ldap-auth = ["ldap3"]
  otp-auth = ["otpauth"]
  passkeys = ["coset", "passkey", "passkey-client"]
  saml = ["quick-xml"]
  tui = ["colored", "console", "crossterm", "indicatif", "ratatui", "tui-input"]
  unicode-support = ["unicode-normalization"]
  warp-integration = ["warp"]
  web-gui = ["askama", "axum", "serde_urlencoded", "tower", "tower-http"]

  # Enhanced performance and observability
  config-hot-reload = ["notify"]
  enhanced-observability = [
    "futures",
    "opentelemetry",
    "opentelemetry-jaeger",
    "opentelemetry-otlp",
    "opentelemetry-prometheus",
    "tokio-stream",
    "tracing-opentelemetry",
  ]
  event-sourcing = ["futures", "notify", "tokio-stream"]
  performance-optimization = [
    "bumpalo",
    "metrics",
    "metrics-prometheus",
    "object-pool",
    "prometheus",
  ]
  tiered-storage = ["postgres-storage", "redis"]

  # SMSKit integration (next-generation SMS support)
  smskit = [
    "sms-aws-sns",
    "sms-core",
    "sms-plivo",
    "sms-twilio",
    "sms-web-generic",
  ]
  smskit-web-axum = ["axum-integration", "sms-web-axum", "smskit"]

  # Enhanced cryptography dependencies
  [dependencies.aes-gcm]
    optional = false  # Enable by default for encryption support
    version  = "0.10"

  [dependencies.chacha20poly1305]
    optional = true
    version  = "0.10"

  [dependencies.x25519-dalek]
    optional = true
    version  = "2.0"

  [dependencies.ed25519-dalek]
    features = ["rand_core"]
    optional = true
    version  = "2.1"

  [dependencies.aws-lc-rs]
    features = ["aws-lc-sys"]
    optional = true
    version  = "1.8"

  [dependencies.parking_lot]
    version = "0.12"

  [dependencies.getrandom]
    features = ["std"]
    version  = "0.3"

[[bench]]
  harness = false
  name    = "auth_performance"

[[example]]
  name = "performance_demo"
  required-features = [
    "enhanced-observability",
    "event-sourcing",
    "performance-optimization",
  ]

[[example]]
  name              = "complete_rest_api_server"
  path              = "examples/complete_rest_api_server.rs"
  required-features = ["api-server"]
